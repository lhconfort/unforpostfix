#!/bin/bash

# <%= "Start or stop #{application}-unicorn" %>
#
# Matias Hick <me@unformatt.com.ar>

### BEGIN INIT INFO
# Provides:          postfixman-unicorn
# Required-Start:    $local_fs $remote_fs $syslog $network
# Required-Stop:     $local_fs $remote_fs $syslog $network
# Should-Start:
# Should-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: <%= "Starts #{application}-unicorn" %>
# Description:       <%= "Launches #{application}-unicorn" %>
### END INIT INFO

PATH=<%= absolute_path(default_environment["PATH"], user) %>
PIDFILE=<%= "#{shared_path}/pids/unicorn.pid" %>
export RAILS_ENV=production

getPID() {
  if [ ! -z `cat $PIDFILE 2> /dev/null` ]; then
    ps -ef | awk '{ print $2 }' | grep -w `cat $PIDFILE`
  fi
}

case "$1" in
  start)
    echo -ne "<%= "Starting #{application}-unicorn..." %>"

    if [ -z "$(getPID)" ]; then
      cd <%=current_path%>
      bundle exec unicorn -c <%= "#{shared_path}/config/unicorn.rb" %> -D

      echo "started!"
    else
      echo "is already running!"
    fi
    ;;

  stop)
    echo -ne "<%= "Stopping #{application}-unicorn..." %>"

    if [ -z "$(getPID)" ]; then
      echo "is not running!"
    else
      kill -INT $(getPID) &> /dev/null

      echo "stopped!"
    fi
    ;;

  graceful_stop)
    if [ -z "$(getPID)" ]; then
      echo "<%= "#{application}-unicorn is not running!" %>"
    else
      kill -QUIT $(getPID) &> /dev/null

      echo "<%= "#{application}-unicorn will stop after current request finishes." %>"
    fi
    ;;

  restart)
    $0 stop
    sleep 3
    $0 start
    ;;

  reload)
    echo -ne "<%= "Reloading #{application}-unicorn..." %>"

    if [ -z "$(getPID)" ]; then
      echo "is not running!"
    else
      kill -HUP $(getPID) &> /dev/null

      echo "reloaded!"
    fi
    ;;

  *)
    echo "usage: $0 {start|stop|graceful_stop|restart|reload}"
esac
exit 0
