upstream <%=application%> {
<%- roles[:app].each do |server_name| -%>
  server <%="#{app_servers[server_name.host.to_sym][:host]}:#{app_servers[server_name.host.to_sym][:port]}"%>;
<%- end -%>
}

<%- if nginx_use_ssl -%>
server {
  listen         80;
  server_name    <%=nginx_server_names%>;
  rewrite        ^ https://$server_name$request_uri? permanent;
}
<%- end -%>

server {
  <%- if nginx_use_ssl -%>
  listen 443;
  ssl on;
  ssl_certificate <%=nginx_ssl_certificate%>;
  ssl_certificate_key <%=nginx_ssl_private_key%>;
  <%- end -%>

  server_name <%=nginx_server_names%>;
  root <%=current_path%>/public;
  access_log <%=shared_path%>/log/nginx-access.log;
  error_log <%=shared_path%>/log/nginx-error.log;
  rewrite_log on;

  client_max_body_size 4G;
  keepalive_timeout 5;

  if (-f $document_root/public/maintenance.html) {
    rewrite ^(.*)$ /public/maintenance.html;
    break;
  }

  location ~ ^/(assets)/ {
    root <%=current_path%>/public;
    gzip_static on;
    expires max;
    add_header Cache-Control public;
    break;
  }

  location / {
    try_files $uri/index.html $uri.html $uri @<%=application%>;

    error_page 404              /404.html;
    error_page 422              /422.html;
    error_page 500 502 503 504  /500.html;
    error_page 403              /403.html;
    break;
  }

  location @<%=application%> {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host            $http_host;
    <%- if nginx_use_ssl -%>
    proxy_set_header                 X-Forwarded-Proto https;
    <%- end -%>
    proxy_headers_hash_bucket_size   1024;
    proxy_headers_hash_max_size      512;
    proxy_read_timeout               <%=nginx_read_timeout%>;
    proxy_redirect                   off;
    proxy_pass                       http://<%=application%>;
    include                          proxy_params;
    break;
  }
}
